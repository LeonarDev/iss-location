{"version":3,"sources":["context/ISSContext.js","assets/latitude.svg","assets/longitude.svg","assets/loading.svg","components/ISSLocation.js","services/issAPI.js","context/ISSProvider.js","App.js","index.js"],"names":["ISSContext","createContext","ISSLocation","fetchISSLocation","this","context","timer","setInterval","clearInterval","Consumer","latitude","longitude","isFetching","className","center","defaultWidth","height","minZoom","maxZoom","zoom","anchor","src","loadingImg","alt","width","latitudeImg","longitudeImg","Component","contextType","getCurrentISSLocation","fetch","then","response","json","ok","Promise","resolve","reject","ISSProvider","state","error","bind","setState","a","iss_position","parseFloat","children","props","Provider","value","React","App","ReactDOM","render","document","getElementById"],"mappings":"6QAIeA,EAFIC,0BCFJ,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,oC,OCYnCC,E,uKACJ,WAAqB,IACXC,EAAqBC,KAAKC,QAA1BF,iBACRC,KAAKE,MAAQC,aAAY,WACvBJ,MANc,O,kCAUlB,WACEK,cAAcJ,KAAKE,S,oBAGrB,WACE,OACE,cAAC,EAAWG,SAAZ,UACG,gBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,WAAxB,OACC,iCACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,CACEC,OAAS,CAAC,EAAG,GACbC,aAAe,IACfC,OAAS,IACTC,QAAU,IACVC,QAAU,EACVC,KAAO,IANT,SAQE,cAAC,IAAD,CAAQC,OAAS,CAACV,EAAUC,SAG/BC,EAEG,qBACES,IAAMC,EACNC,IAAI,oBACJC,MAAQ,GACRR,OAAS,KAIX,0BAASH,UAAU,mBAAnB,UACE,sBAAKA,UAAU,WAAf,UACE,qBACEA,UAAU,eACVQ,IAAMI,EACND,MAAQ,GACRR,OAAS,GACTO,IAAI,aAEN,+BAAOb,OAET,sBAAKG,UAAU,WAAf,UACE,qBACEA,UAAU,eACVQ,IAAMK,EACNF,MAAQ,GACRR,OAAS,GACTO,IAAI,cAEN,+BAAOZ,oB,GA1DDgB,aAqE1BzB,EAAY0B,YAAc5B,EAEXE,Q,uCCjFF2B,EAAwB,kBACnCC,MAAM,GAAD,OAHc,6BAGd,kBACFC,MAAK,SAACC,GAAD,OACJA,EACGC,OACAF,MAAK,SAACE,GAAD,OAAWD,EAASE,GAAKC,QAAQC,QAAQH,GAAQE,QAAQE,OAAOJ,UCsC/DK,E,kDAxCb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACX7B,SAAU,GACVC,UAAW,GACX6B,MAAO,KACP5B,YAAY,GAGd,EAAKT,iBAAmB,EAAKA,iBAAiBsC,KAAtB,gBAVZ,E,oDAad,WAAoB,IAAD,OAKjBrC,KAAKsC,SAAS,CAAE9B,YAAY,GAA5B,sBAAoC,kCAAA+B,EAAA,sEACsBd,IADtB,oBAC1Be,aAAgBlC,EADU,EACVA,SAAUC,EADA,EACAA,UAClC,EAAK+B,SAAS,CACZhC,SAAUmC,WAAWnC,GACrBC,UAAWkC,WAAWlC,GACtBC,YAAY,IALoB,8C,oBAUtC,WAAU,IACAkC,EAAa1C,KAAK2C,MAAlBD,SACR,OACE,cAAC,EAAWE,SAAZ,CACEC,MAAK,2BAAQ7C,KAAKmC,OAAb,IAAoBpC,iBAAkBC,KAAKD,mBADlD,SAGG2C,Q,GAnCiBI,IAAMvB,WCkBjBwB,E,4JAhBb,WACE,OACE,cAAC,EAAD,UACE,sBAAKtC,UAAU,MAAf,UACE,+CAEG,IACD,sBAAMA,UAAU,cAAhB,wBAEF,cAAC,EAAD,a,GAVQqC,IAAMvB,WCCxByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2c108800.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst ISSContext = createContext();\n\nexport default ISSContext;\n","export default __webpack_public_path__ + \"static/media/latitude.dfbecff8.svg\";","export default __webpack_public_path__ + \"static/media/longitude.6979ac5c.svg\";","export default __webpack_public_path__ + \"static/media/loading.4e2751d7.svg\";","import React, { Component } from 'react';\nimport Marker from 'pigeon-marker';\nimport Map from 'pigeon-maps';\n\nimport ISSContext from '../context/ISSContext';\n\nimport latitudeImg from '../assets/latitude.svg';\nimport longitudeImg from '../assets/longitude.svg';\nimport loadingImg from '../assets/loading.svg';\n\nconst TWO_SECONDS = 2000;\n\nclass ISSLocation extends Component {\n  componentDidMount() {\n    const { fetchISSLocation } = this.context;\n    this.timer = setInterval(() => {\n      fetchISSLocation();\n    }, TWO_SECONDS);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timer);\n  }\n\n  render() {\n    return (\n      <ISSContext.Consumer>\n        {({ latitude, longitude, isFetching }) => (\n          <main>\n            <div className=\"map\">\n              <Map\n                center={ [0, 0] }\n                defaultWidth={ 450 }\n                height={ 450 }\n                minZoom={ 1.5 }\n                maxZoom={ 8 }\n                zoom={ 1.5 }\n              >\n                <Marker anchor={ [latitude, longitude] } />\n              </Map>\n            </div>\n            {isFetching\n              ? (\n                <img\n                  src={ loadingImg }\n                  alt=\"loading animation\"\n                  width={ 32 }\n                  height={ 32 }\n                />\n              )\n              : (\n                <section className=\"lat-long-section\">\n                  <div className=\"lat-long\">\n                    <img\n                      className=\"lat-long-img\"\n                      src={ latitudeImg }\n                      width={ 24 }\n                      height={ 24 }\n                      alt=\"latitude\"\n                    />\n                    <span>{latitude}</span>\n                  </div>\n                  <div className=\"lat-long\">\n                    <img\n                      className=\"lat-long-img\"\n                      src={ longitudeImg }\n                      width={ 24 }\n                      height={ 24 }\n                      alt=\"longitude\"\n                    />\n                    <span>{longitude}</span>\n                  </div>\n                </section>\n              )}\n          </main>\n        )}\n      </ISSContext.Consumer>\n    );\n  }\n}\n\nISSLocation.contextType = ISSContext;\n\nexport default ISSLocation;\n","const ISS_BASE_API = 'http://api.open-notify.org';\n\nexport const getCurrentISSLocation = () => (\n  fetch(`${ISS_BASE_API}/iss-now.json`)\n    .then((response) => (\n      response\n        .json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n);\n\nexport default getCurrentISSLocation;\n","import React from 'react';\nimport ISSContext from './ISSContext';\nimport { getCurrentISSLocation } from '../services/issAPI';\n\nclass ISSProvider extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      latitude: 10,\n      longitude: 10,\n      error: null,\n      isFetching: false,\n    };\n\n    this.fetchISSLocation = this.fetchISSLocation.bind(this);\n  }\n\n  fetchISSLocation() {\n    // seta isFetching pra true\n    // fazer a requisicao\n    // armazenar o resultado no context\n\n    this.setState({ isFetching: true }, async () => {\n      const { iss_position: { latitude, longitude } } = await getCurrentISSLocation();\n      this.setState({\n        latitude: parseFloat(latitude),\n        longitude: parseFloat(longitude),\n        isFetching: false,\n      });\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <ISSContext.Provider\n        value={ { ...this.state, fetchISSLocation: this.fetchISSLocation } }\n      >\n        {children}\n      </ISSContext.Provider>\n    );\n  }\n}\n\nexport default ISSProvider;\n","import React from 'react';\nimport './App.css';\nimport ISSLocation from './components/ISSLocation';\nimport ISSProvider from './context/ISSProvider';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ISSProvider>\n        <div className=\"App\">\n          <h1>\n            Space Station\n            {' '}\n            <span className=\"purple-font\">Tracker</span>\n          </h1>\n          <ISSLocation />\n        </div>\n      </ISSProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}